{"version":3,"sources":["components/Tile.js","components/Row.js","components/Map.js","constants/maps.js","hooks/useBlockers.js","utils/calculateDistance.js","constants/index.js","utils/evaluateCalculations.js","hooks/useUser.js","hooks/useRoad.js","App.js","hooks/useGoalAndStart.js","reportWebVitals.js","index.js"],"names":["MemoTile","item","isBlocker","isOpen","isRoad","isGoal","isPath","isUserPosition","setTileAsBlocker","isSetting","isGoalSetting","isStartSetting","onSetStart","onSetGoal","classes","isVisitedClass","isRoadClass","isGoalClass","isUserPositionClass","isPathClass","isTentativeClass","IS_TENTATIVE_BETTER","memoIsRoadClass","useMemo","memoIsGoalClass","memoIsVisitedClass","onClick","x","y","className","Tile","React","memo","MemoRow","columns","blockers","open","road","goal","path","userPosition","columnsToRender","Array","fill","length","find","visitedTile","roadTile","pathTile","map","index","blocker","Row","Map","rows","rowsToRender","getRowValue","tiles","filter","tile","_","reverse","maps","wall","mrmap","something","useBlockers","dimension","useState","setBlockers","setBlockersOnMap","calculate","coordinate","Math","round","random","calculateBlockers","prevState","concat","setBlockersBasedOnGeneratedMap","mapName","blockersInMap","forEach","row","yIndex","xIndex","push","gCost","tilePosition","playerPosition","width","height","sqrt","hCost","addCosts","player","undefined","g_cost","h_cost","cost","itemToReturn","parent","getMinCostTiles","data","allCosts","min","minArray","getMinHCostTile","hMinCosts","hMin","getMinCostTile","START","GOAL","letCalculateLowerPosition","letCalculateHigherPosition","DIMENSION","evaluateTilesFromOpen","array","openTile","status","removeBlockerTilesFromOpen","blockerTile","removeCurrentPositionFromOpen","currentPosition","checkIfCanReturn","removeUndefined","doCalculations","check","openItem","checkIfAlreadyAddedToOpen","leftTile","rightTile","topTile","bottomTile","topLeftTile","topRightTile","bottomLeftTile","bottomRightTile","neighbours","usePlayer","startingPoint","extendUserData","setPosition","useEffect","prevValue","document","addEventListener","event","code","move","position","useRoad","count","withSkipping","withNeighbourEvaluation","setRoad","setPath","uniques","setCurrentNeighbours","setOpen","isGoalReached","newUniques","newNeighbours","parseData","uniquesWithoutRoadTiles","withoutBlocker","withoutCurrentPlace","nextTile","openWithoutEvaluation","neighboursCosts","findLowestCostTile","evaluateRestTiles","setFinalPath","start","tempPath","getParent","resolvePath","clearAll","newPlayerPostition","clearRoad","clearOpen","clearNeighbours","App","setCount","setWithSkipping","setWithNeighbourEvaluation","setStart","setIsStartSetting","setGoal","setIsGoalSetting","useGoalAndStart","setIsSetting","positionRef","useRef","current","handler","setInterval","clearInterval","window","location","reload","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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AI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAoD7EC,MAhDU,CACV,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAC7E,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,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","file":"static/js/main.3b5b41bd.chunk.js","sourcesContent":["import React, { useMemo } from 'react'\nimport './Tile.css'\n\nexport const MemoTile = ({ item, isBlocker, isOpen, isRoad, isGoal, isPath, isUserPosition, setTileAsBlocker, isSetting, isGoalSetting, isStartSetting, onSetStart, onSetGoal }) => {\n    const classes = isBlocker ? 'block_tile' : 'tile';\n    const isVisitedClass = isOpen ? 'is_open' : '';\n    const isRoadClass = isRoad ? 'is_road' : '';\n    const isGoalClass = isGoal ? 'is_goal' : '';\n    const isUserPositionClass = isUserPosition ? 'is_user' : '';\n    const isPathClass = isPath ? 'is_path' : '';\n    const isTentativeClass = isOpen && isOpen.IS_TENTATIVE_BETTER ? 'is_tentative' : ''\n    const memoIsRoadClass = useMemo(() => isRoadClass, [isRoadClass]);\n    const memoIsGoalClass = useMemo(() => isGoalClass, [isGoalClass]);\n    const memoIsVisitedClass = useMemo(() => isVisitedClass, [isVisitedClass]);\n\n    const resolveClickBehaviour = () => {\n        if(isStartSetting) {\n            onSetStart({ x: item.x, y: item.y })\n        }\n        if(isGoalSetting) {\n            onSetGoal({ x: item.x, y: item.y })\n        }\n        if(isSetting) {\n            setTileAsBlocker({ x: item.x, y: item.y })\n        }\n        return false\n    }\n\n    return <div\n        onClick={resolveClickBehaviour}\n        className={`size ${classes} ${memoIsVisitedClass} ${memoIsRoadClass} ${memoIsGoalClass} ${isUserPositionClass} ${isPathClass} ${isTentativeClass}`}\n    />\n};\n\nexport const Tile = React.memo(MemoTile);\n\n","import React from 'react';\nimport { Tile } from './Tile';\nimport './Row.css'\n\nconst MemoRow = ({ x, columns, blockers, open, road, goal, path, userPosition, setTileAsBlocker, isSetting, isGoalSetting, isStartSetting, onSetGoal, onSetStart }) => {\n    const columnsToRender = new Array(columns).fill(x);\n\n    const isOpen = (y) => {\n        return open.length > 0 && open.find((visitedTile) => visitedTile.y === y);\n    }\n    const isBlocker = (y) => {\n        return blockers.length > 0 && blockers.find((blocker) => blocker.y === y);\n    }\n    const isRoad = (y) => {\n        return road.length > 0 && road.find((roadTile) => roadTile.y === y);\n    }\n    const isGoal = (y) => {\n        return goal && goal.y === y;\n    }\n\n    const isPath = (y) => {\n        return path.length > 0 && path.find((pathTile) => pathTile.y === y);\n    }\n\n    const isUserPosition = (x, y) => {\n        return userPosition.x === x && userPosition.y === y;\n    }\n\n    return(\n        <div className=\"row\">\n            {columnsToRender\n                .map((item, index) => ({ x: item, y: index, ...item }))\n                .map((item, index) => {\n                return <Tile\n                    key={`${item.x}_${item.y}`}\n                    item={item}\n                    isBlocker={isBlocker(item.y)}\n                    isOpen={isOpen(item.y)}\n                    isRoad={isRoad(item.y)}\n                    isGoal={isGoal(item.y)}\n                    isPath={isPath(item.y)}\n                    isUserPosition={isUserPosition(item.x, item.y)}\n                    setTileAsBlocker={setTileAsBlocker}\n                    isSetting={isSetting}\n                    isStartSetting={isStartSetting}\n                    isGoalSetting={isGoalSetting}\n                    onSetStart={onSetStart}\n                    onSetGoal={onSetGoal}\n                />\n            })}\n        </div>\n    )\n}\n\nexport const Row = React.memo(MemoRow);\n","import React from 'react';\nimport {Row} from \"./Row\";\nimport './Map.css';\n\nexport const Map = ({ columns, rows, blockers, open, road, goal, path, userPosition, setTileAsBlocker, isSetting, isGoalSetting, isStartSetting, onSetGoal, onSetStart }) => {\n    const rowsToRender = new Array(rows).fill(0);\n\n    const getRowValue = (tiles, index) => {\n        return tiles.filter((tile) => tile.x === index)\n    }\n\n\n\n    return(\n        <div className=\"map\">\n            {rowsToRender.map(\n                (_, index) => {\n                    return(\n                         <Row\n                             key={index}\n                             x={index}\n                             columns={columns}\n                             blockers={getRowValue(blockers, index)}\n                             open={getRowValue(open, index)}\n                             road={getRowValue(road, index)}\n                             path={getRowValue(path, index)}\n                             goal={goal.x === index && goal}\n                             userPosition={userPosition}\n                             setTileAsBlocker={setTileAsBlocker}\n                             isSetting={isSetting}\n                             isStartSetting={isStartSetting}\n                             isGoalSetting={isGoalSetting}\n                             onSetStart={onSetStart}\n                             onSetGoal={onSetGoal}\n                         />\n                    )\n                }\n                ).reverse()\n            }\n        </div>\n    )\n}\n","const wall = [\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],\n    ['-','-','-','-','-','-','#','#','#','#','#','#','#','#','#','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','#','#','#','#','#','#','#','#','#','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],\n];\n\n\nconst mrmap = [\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','#','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','#','-','-'],\n    ['-','-','-','-','#','-','-','-','-','-','#','#','#','#','-','-','-','-','-','-'],\n    ['-','-','-','-','#','#','-','-','-','#','#','-','-','#','#','-','-','-','-','-'],\n    ['-','-','-','-','#','#','#','-','#','#','#','-','-','-','#','-','-','-','-','-'],\n    ['-','-','-','-','#','-','#','#','#','-','#','-','-','-','#','-','-','-','-','-'],\n    ['-','-','-','-','#','-','-','#','-','-','#','-','-','#','#','-','-','-','-','-'],\n    ['-','-','-','-','#','-','-','-','-','-','#','#','#','#','-','-','-','-','-','-'],\n    ['-','-','-','-','#','-','-','-','-','-','#','-','#','-','-','-','-','-','-','-'],\n    ['-','-','-','-','#','-','-','-','-','-','#','-','#','#','-','-','-','-','-','-'],\n    ['-','-','-','-','#','-','-','-','-','-','#','-','-','#','-','-','-','-','-','-'],\n    ['-','-','-','-','#','-','-','-','-','-','#','-','-','#','#','-','-','-','-','-'],\n    ['-','-','-','-','#','-','-','-','-','-','#','-','-','-','#','-','-','-','-','-'],\n    ['-','-','-','-','#','-','-','-','-','-','#','-','-','-','#','-','-','-','-','-'],\n    ['-','-','-','-','#','-','-','-','-','-','#','-','-','-','#','-','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],\n]\n\nconst something = [\n    ['-','-','-','-','-','-','#','-','-','-','-','-','-','-','-','-','#','-','-','-'],\n    ['-','-','-','-','-','-','#','-','-','-','-','-','-','-','-','-','#','-','-','-'],\n    ['-','-','-','#','-','-','#','-','-','-','-','-','#','-','-','#','#','-','-','-'],\n    ['-','-','-','#','-','-','#','-','-','-','-','-','#','-','-','#','-','-','#','-'],\n    ['-','-','-','#','-','-','#','#','#','#','#','-','#','-','-','#','-','-','#','-'],\n    ['-','-','-','#','-','-','#','-','-','-','-','-','#','-','-','#','-','#','#','-'],\n    ['-','-','-','#','-','-','#','-','-','-','-','-','#','-','-','#','-','#','-','-'],\n    ['-','-','-','#','-','-','#','-','#','#','#','#','#','-','-','-','-','#','-','-'],\n    ['-','-','-','#','-','-','#','-','-','-','-','-','#','#','#','#','#','#','-','-'],\n    ['-','-','-','#','-','-','#','-','-','-','-','-','#','-','-','-','-','-','-','-'],\n    ['-','-','-','#','-','-','#','-','-','-','-','-','#','-','-','-','-','-','-','-'],\n    ['-','-','-','#','-','-','#','#','#','#','#','-','#','-','-','-','-','-','-','-'],\n    ['-','-','-','#','-','-','#','-','-','-','-','-','#','-','-','-','-','-','-','-'],\n    ['-','-','-','#','-','-','#','-','-','-','-','-','#','#','#','#','#','#','-','-'],\n    ['-','-','-','#','-','-','#','-','-','-','-','-','#','-','-','-','#','-','-','-'],\n    ['-','-','-','#','-','-','#','-','-','-','-','-','#','-','-','-','#','-','-','-'],\n    ['-','-','-','#','-','-','#','-','-','-','-','-','#','-','-','-','#','-','-','-'],\n    ['-','-','-','#','-','-','#','-','-','-','-','-','#','-','-','-','#','-','-','-'],\n    ['-','-','-','#','-','-','-','-','-','-','-','-','#','-','-','-','#','-','-','-'],\n    ['-','-','-','#','-','-','-','-','-','-','-','-','#','-','-','-','-','-','-','-'],\n]\n\nexport const maps = {\n    wall,\n    mrmap,\n    something\n}","import { useState } from 'react'\nimport { maps } from '../constants/maps';\nimport '../components/Tile.css'\n\nexport const useBlockers = ({ dimension }) => {\n    const [blockers, setBlockers] = useState([]);\n\n    const calculateBlockers = () => {\n        const calculate = () => {\n            const coordinate = Math.round(Math.random() * dimension)\n            if (coordinate !== 0)\n                return coordinate - 1;\n            return coordinate\n        }\n        return new Array(dimension * 8).fill(0).map(() => ({\n            x: calculate(),\n            y: calculate(),\n        }))\n            .filter(({ x, y }) => (x !== 0 && y !== 0))\n            .filter(({ x, y }) => (x !== dimension - 1 && y !== dimension - 1))\n    }\n\n    const setBlockersBasedOnGeneratedMap = (mapName) => {\n        const blockersInMap = [];\n        maps[mapName].reverse().forEach((row, yIndex) => {\n            row.forEach((tile, xIndex) => {\n                if(tile === '-') return;\n                blockersInMap.push({ x: yIndex, y: xIndex })\n            })\n        })\n        setBlockers(blockersInMap)\n    }\n\n    const setBlockersOnMap = () => {\n        setBlockers(calculateBlockers());\n    }\n\n    const setTileAsBlocker = (tile) => {\n        setBlockers((prevState) => prevState.concat(tile));\n    }\n\n    return {\n        setBlockersOnMap,\n        blockers,\n        setTileAsBlocker,\n        setBlockersBasedOnGeneratedMap\n    }\n}\n","\nconst gCost = (tilePosition, playerPosition) => { // gCost from start\n    const width = tilePosition.x - playerPosition.x;\n    const height = tilePosition.y - playerPosition.y;\n    return Math.sqrt(width*width + height*height);\n}\n\nconst hCost = (tilePosition, goal) => { // hCost from end\n    const width = goal.x - tilePosition.x;\n    const height = goal.y - tilePosition.y;\n    return Math.sqrt(width*width + height*height);\n}\n\nexport const addCosts = (item, goal, player = undefined) => {\n    if(!item) return undefined;\n    const g_cost = gCost(item, player) + player.gCost;\n    const h_cost = hCost(item, goal);\n    const cost = g_cost + h_cost;\n    const itemToReturn = {\n        x: item.x,\n        y: item.y,\n        gCost: g_cost,\n        hCost: h_cost,\n        cost: cost,\n        parent: player,\n    }\n    return itemToReturn\n}\nexport const getMinCostTiles = (data) => {\n    const allCosts = data.map((item) => item.cost);\n    const min = Math.min(...allCosts);\n    return {\n        minArray: data.filter((item) => item.cost === min),\n        min,\n    };\n}\n\nexport const getMinHCostTile = (data) => {\n    const hMinCosts = data.map((item) => item.hCost);\n    const hMin = Math.min(...hMinCosts);\n    const tileToMove = data.find((item) => item.hCost === hMin);\n    return tileToMove;\n}\n\nexport const getMinCostTile = (tiles, min) => tiles.find((item) => item.cost === min);","export const START = { x: 0, y: 0 };\nexport const GOAL = { x: 19, y: 19 };\nexport const DIMENSION = 20;\n","import { addCosts } from './calculateDistance';\nimport { DIMENSION } from \"../constants\";\n\nexport const letCalculateLowerPosition = (coordinate) => {\n    if(coordinate <= 0) {\n        return -1\n    }\n    return coordinate - 1;\n}\n\nexport const letCalculateHigherPosition = (coordinate) => {\n    if(coordinate >= DIMENSION - 1) {\n        return -1\n    }\n    return coordinate + 1;\n}\n\nexport const evaluateTilesFromOpen = (open, road) => {\n    let array = open;\n    road.forEach((roadTile) => {\n        array = array.filter((openTile) => {\n            return openTile.x !== roadTile.x || openTile.y !== roadTile.y\n        });\n    })\n    return array.map((item) => ({...item, status: 'waiting'}));\n}\n\nexport const removeBlockerTilesFromOpen = (open, blockers) => {\n    let array = open;\n    blockers.forEach((blockerTile) => {\n        array = array.filter((openTile) => {\n            return openTile.x !== blockerTile.x || openTile.y !== blockerTile.y\n        });\n    })\n    return array;\n}\n\nexport const removeCurrentPositionFromOpen = (open, currentPosition) => {\n    return open.filter((openTile) => openTile.x !== currentPosition.x || openTile.y !== currentPosition.y);\n}\n\n\nconst checkIfCanReturn = (item) => {\n    if(item.x === -1 || item.y === -1) {\n        return undefined;\n    }\n    return item\n}\n\nconst checkIfAlreadyAddedToOpen = (item, open) => {\n    if(!item) return;\n    if(open.find((openItem) => openItem.x === item.x && openItem.y === item.y)) {\n        return undefined;\n    }\n    return item\n}\n\nexport const evaluateRestTiles = (open) => {\n    return open.map((item) => {\n        if(item.status === 'waiting') {\n            return {\n                ...item,\n                status: 'skipped',\n            }\n        }\n        return item\n    })\n}\n\nexport const removeUndefined = (array) => {\n    return array.filter((item) => item);\n}\n\n\n\nexport const doCalculations = (player, open, goal) => {\n    const check = (tile) => checkIfAlreadyAddedToOpen(tile, open)\n    const leftTile = addCosts(\n        checkIfCanReturn({ x: letCalculateLowerPosition(player.x), y: player.y }),\n        goal,\n        player\n    )\n    const rightTile = addCosts(\n        checkIfCanReturn({ x: letCalculateHigherPosition(player.x), y: player.y }),\n        goal,\n        player\n    );\n    const topTile = addCosts(\n        checkIfCanReturn({ x: player.x, y: letCalculateHigherPosition(player.y) }),\n        goal,\n        player\n    );\n    const bottomTile = addCosts(\n        checkIfCanReturn({ x: player.x, y: letCalculateLowerPosition(player.y) }),\n        goal,\n        player\n    );\n    const topLeftTile = addCosts(\n        checkIfCanReturn({ x: letCalculateLowerPosition(player.x), y: letCalculateHigherPosition(player.y) }),\n        goal,\n        player\n    );\n    const topRightTile = addCosts(\n        checkIfCanReturn({ x: letCalculateHigherPosition(player.x), y: letCalculateHigherPosition(player.y) }),\n        goal,\n        player\n    );\n    const bottomLeftTile = addCosts(\n        checkIfCanReturn({ x: letCalculateLowerPosition(player.x), y: letCalculateLowerPosition(player.y) }),\n        goal,\n        player\n    );\n    const bottomRightTile = addCosts(\n        checkIfCanReturn({ x: letCalculateHigherPosition(player.x), y: letCalculateLowerPosition(player.y) }),\n        goal,\n        player\n    );\n    return {\n        leftTile: leftTile && check(leftTile),\n        rightTile: rightTile && check(rightTile),\n        topTile: topTile && check(topTile),\n        bottomTile: bottomTile && check(bottomTile),\n        topLeftTile: topLeftTile && check(topLeftTile),\n        topRightTile: topRightTile && check(topRightTile),\n        bottomLeftTile: bottomLeftTile && check(bottomLeftTile),\n        bottomRightTile: bottomRightTile && check(bottomRightTile),\n        neighbours: {\n            leftTile,\n            rightTile,\n            topTile,\n            bottomTile,\n            topLeftTile,\n            topRightTile,\n            bottomLeftTile,\n            bottomRightTile,\n        }\n    }\n}\n","import { useState, useEffect } from 'react';\nimport { letCalculateLowerPosition, letCalculateHigherPosition } from '../utils/evaluateCalculations';\n\nexport const usePlayer = (startingPoint) => {\n    const extendUserData = {\n        gCost: 0,\n        parent: null,\n    }\n    const [player, setPosition] = useState({\n        ...startingPoint,\n        ...extendUserData,\n    });\n\n    useEffect(() => {\n        setPosition((prevValue) => ({\n            ...prevValue,\n            x: startingPoint.x,\n            y: startingPoint.y,\n        }))\n    }, [startingPoint.x, startingPoint.y])\n\n    function setListenToArrows() {\n        document.addEventListener('keyup', function(event) {\n            const up = 'ArrowUp';\n            const down = 'ArrowDown';\n            const left = 'ArrowLeft';\n            const right = 'ArrowRight';\n            switch (event.code) {\n                case up: {\n                    setPosition((prevValue) => {\n                        return {\n                            ...prevValue,\n                            x: letCalculateHigherPosition(prevValue),\n                        }\n                    });\n                    break;\n                }\n                case down: {\n                    setPosition((prevValue) => {\n                        return {\n                            ...prevValue,\n                            x: letCalculateLowerPosition(prevValue),\n                        }\n                    });\n                    break;\n                }\n                case left: {\n                    setPosition((prevValue) => {\n                        return {\n                            ...prevValue,\n                            y: letCalculateLowerPosition(prevValue),\n                        }\n                    });\n                    break;\n                }\n                case right: {\n                    setPosition((prevValue) => {\n                        return {\n                            ...prevValue,\n                            y: letCalculateHigherPosition(prevValue)\n                        }\n                    });\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        })\n    }\n\n    const move = (position) => {\n        setPosition(position);\n    }\n\n    useEffect(() => {\n        setListenToArrows();\n    }, [])\n\n    return {\n        player,\n        setPosition,\n        move,\n        extendUserData,\n    }\n}\n","import { useState, useEffect } from 'react';\nimport {\n    doCalculations,\n    evaluateRestTiles,\n    removeUndefined,\n    evaluateTilesFromOpen,\n    removeCurrentPositionFromOpen,\n    removeBlockerTilesFromOpen,\n} from '../utils/evaluateCalculations';\nimport { getMinCostTiles, getMinHCostTile, getMinCostTile } from '../utils/calculateDistance';\n\n\nexport const useRoad = (goal, player, blockers, count, move, withSkipping, withNeighbourEvaluation) => {\n    const [road, setRoad] = useState([player]);\n    const [path, setPath] = useState([]);\n    // initial tiles\n    const {\n        leftTile,\n        rightTile,\n        topTile,\n        bottomTile,\n        topLeftTile,\n        topRightTile,\n        bottomLeftTile,\n        bottomRightTile,\n    } = doCalculations(player, [], goal)\n    const uniques = removeUndefined([\n        leftTile,\n        rightTile,\n        topTile,\n        bottomTile,\n        topLeftTile,\n        topRightTile,\n        bottomLeftTile,\n        bottomRightTile,\n    ]);\n\n    const [neighbours, setCurrentNeighbours] = useState(evaluateTilesFromOpen(uniques, road));\n    const [open, setOpen] = useState(evaluateTilesFromOpen(uniques, road));\n    const isGoalReached = (position) => position && position.x === goal.x && position.y === goal.y\n\n    // update area based on new position\n    /* eslint-disable */\n    useEffect(() => {\n        const {\n            leftTile,\n            rightTile,\n            topTile,\n            bottomTile,\n            topLeftTile,\n            topRightTile,\n            bottomLeftTile,\n            bottomRightTile,\n            neighbours,\n        } = doCalculations(player, open, goal)\n        const newUniques = removeUndefined([\n            leftTile,\n            rightTile,\n            topTile,\n            bottomTile,\n            topLeftTile,\n            topRightTile,\n            bottomLeftTile,\n            bottomRightTile,\n        ])\n        const newNeighbours = removeUndefined([\n            neighbours.leftTile,\n            neighbours.rightTile,\n            neighbours.bottomTile,\n            neighbours.topTile,\n            neighbours.topLeftTile,\n            neighbours.topRightTile,\n            neighbours.bottomLeftTile,\n            neighbours.bottomRightTile,\n        ])\n        const parseData = (uniques, prevState = []) => {\n            const uniquesWithoutRoadTiles = evaluateTilesFromOpen(uniques, road.concat(player));\n            const withoutBlocker = removeBlockerTilesFromOpen(uniquesWithoutRoadTiles, blockers);\n            const withoutCurrentPlace = removeCurrentPositionFromOpen(prevState.concat(withoutBlocker), player);\n            return withoutCurrentPlace\n        }\n        setCurrentNeighbours(parseData(newNeighbours));\n        setOpen((prevState) => parseData(newUniques, prevState))\n    }, [player.x, player.y])\n    /* eslint-enable */\n\n\n    const findLowestCostTile = () => {\n        // evaluating all open tiles\n        let openWithoutEvaluation = open.filter((item) => item.status === 'waiting');\n        if(openWithoutEvaluation.length === 0) {\n            openWithoutEvaluation = open.filter((item) => item.status === 'skipped');\n        }\n        const { minArray, min } = getMinCostTiles(openWithoutEvaluation);\n\n        if(withNeighbourEvaluation) { // evaluating only neighbour tiles\n            const neighboursCosts = getMinCostTiles(neighbours);\n\n            if(neighboursCosts.min < min) {\n                if(neighboursCosts.minArray.length > 1) {\n                    return getMinHCostTile(neighboursCosts.minArray);\n                }\n                return getMinCostTile(neighbours, neighboursCosts.min);\n            }\n        }\n\n        if(minArray.length > 1) {\n            return getMinHCostTile(minArray);\n        }\n        return getMinCostTile(openWithoutEvaluation, min);\n    }\n\n    /* eslint-disable */\n    useEffect(() => {\n        if(count > 0 && !isGoalReached(road[road.length - 1])) {\n            const nextTile = findLowestCostTile();\n            move(nextTile)\n            if(withSkipping) {\n                setOpen((prevState) => evaluateRestTiles(prevState))\n            }\n            setRoad((prevState) => prevState.concat(nextTile))\n        }\n    }, [count])\n    /* eslint-enable */\n\n\n    const resolvePath = (start) => {\n        let tempPath = []\n        const getParent = (tile) => {\n            if (tile.parent === null) return;\n            tempPath.push(tile.parent);\n            getParent(tile.parent)\n        }\n        getParent(start);\n        setPath(tempPath);\n    }\n\n    const setFinalPath = () => {\n        resolvePath(road[road.length - 1]);\n    }\n\n    const clearRoad = (newPlayerPostition) => setRoad([newPlayerPostition])\n    const clearOpen = (newPlayerPostition) => {\n        const {\n            leftTile,\n            rightTile,\n            topTile,\n            bottomTile,\n            topLeftTile,\n            topRightTile,\n            bottomLeftTile,\n            bottomRightTile,\n        } = doCalculations(newPlayerPostition, [], goal)\n        const uniques = removeUndefined([\n            leftTile,\n            rightTile,\n            topTile,\n            bottomTile,\n            topLeftTile,\n            topRightTile,\n            bottomLeftTile,\n            bottomRightTile,\n        ]);\n        setOpen(evaluateTilesFromOpen(uniques, [newPlayerPostition]))\n    }\n    const clearNeighbours = (newPlayerPostition) => {\n        const {\n            leftTile,\n            rightTile,\n            topTile,\n            bottomTile,\n            topLeftTile,\n            topRightTile,\n            bottomLeftTile,\n            bottomRightTile,\n        } = doCalculations(newPlayerPostition, [], goal)\n        const uniques = removeUndefined([\n            leftTile,\n            rightTile,\n            topTile,\n            bottomTile,\n            topLeftTile,\n            topRightTile,\n            bottomLeftTile,\n            bottomRightTile,\n        ]);\n        setCurrentNeighbours(evaluateTilesFromOpen(uniques, [newPlayerPostition]))\n    }\n    const clearAll = (newPlayerPostition) => {\n        clearRoad(newPlayerPostition);\n        clearOpen(newPlayerPostition);\n        clearNeighbours(newPlayerPostition);\n    }\n\n    return {\n        open,\n        road,\n        path,\n        setFinalPath,\n        isGoalReached,\n        clearAll,\n    }\n}\n","import React, {useEffect, useState, useRef} from 'react';\nimport './App.css';\nimport { Map } from './components/Map';\nimport { useBlockers } from './hooks/useBlockers';\nimport { usePlayer } from './hooks/useUser';\nimport { useRoad } from './hooks/useRoad';\nimport { useGoalAndStart } from './hooks/useGoalAndStart';\nimport { DIMENSION } from './constants';\n\nfunction App() {\n    const [count, setCount] = useState(0); // frames\n\n    const [ withSkipping, setWithSkipping ] = useState(true);\n    const [ withNeighbourEvaluation, setWithNeighbourEvaluation ] = useState(true);\n\n    const { start, goal, setStart, setGoal, isStartSetting, isGoalSetting, setIsGoalSetting, setIsStartSetting } = useGoalAndStart();\n    const { player, move, extendUserData } = usePlayer(start);\n    const {\n        blockers,\n        setBlockersOnMap,\n        setTileAsBlocker,\n        setBlockersBasedOnGeneratedMap,\n    } = useBlockers({ dimension: DIMENSION });\n    const {\n        open,\n        road,\n        path,\n        setFinalPath,\n        isGoalReached,\n        clearAll\n    } = useRoad(\n        goal,\n        player,\n        blockers,\n        count,\n        move,\n        withSkipping,\n        withNeighbourEvaluation\n    );\n    const [isSetting, setIsSetting] = useState(false);\n    const positionRef = useRef(player)\n\n    // updating position based on frame (count)\n    /* eslint-disable */\n    useEffect(() => {\n        positionRef.current = player;\n        setFinalPath()\n    }, [count])\n    /* eslint-enable */\n\n    const moveByOneTile = () => setCount((prevState) => prevState + 1);\n\n    const moveToLowestCost = () => {\n        const handler = setInterval(() => {\n            if (isGoalReached(positionRef.current)) {\n                clearInterval(handler);\n                return\n            }\n            moveByOneTile()\n        }, 5);\n    }\n\n    const onSetStart = (position) => {\n        clearAll({...position, ...extendUserData});\n        setStart(position)\n        setIsStartSetting(false)\n    }\n    const onSetGoal = (position) => {\n        setGoal(position)\n        setIsGoalSetting(false);\n    }\n\n    const editStartPosition = () => {\n        setIsStartSetting(true);\n        setIsSetting(false);\n        setIsGoalSetting(false);\n    }\n\n    const editGoalPosition = () => {\n        setIsStartSetting(false);\n        setIsSetting(false);\n        setIsGoalSetting(true);\n    }\n\n\n    return (\n    <div className=\"App\">\n        <header className=\"App-header\">\n            <div className=\"move-button\">\n                <button onClick={moveToLowestCost}>move</button>\n            </div>\n            <div className=\"App-content\">\n                <div className=\"buttons\">\n                    <div className=\"setting_buttons\">\n                        <button onClick={() => window.location.reload()}>reload</button>\n                    </div>\n                    <div className=\"setting_buttons\">\n                        <button disabled={isStartSetting} onClick={editStartPosition}>set start</button>\n                        <button disabled={isGoalSetting} onClick={editGoalPosition}>set goal</button>\n                    </div>\n                    <button onClick={setBlockersOnMap}>set blockers</button>\n                    <button onClick={() => setIsSetting(true)}>set blockers individually</button>\n                    <button\n                        className={withSkipping ? 'with-condition' : ''}\n                        onClick={() => setWithSkipping((prevState) => !prevState)}\n                    >\n                        with skipping\n                    </button>\n                    <button\n                        className={withNeighbourEvaluation ? 'with-condition' : ''}\n                        onClick={() => setWithNeighbourEvaluation((prevState) => !prevState)}\n                    >\n                        with neighbours evaluation\n                    </button>\n                </div>\n                <Map\n                    columns={DIMENSION}\n                    rows={DIMENSION}\n                    blockers={blockers}\n                    open={open}\n                    road={road}\n                    path={path}\n                    goal={goal}\n                    userPosition={player}\n                    setTileAsBlocker={setTileAsBlocker}\n                    isSetting={isSetting}\n                    isStartSetting={isStartSetting}\n                    isGoalSetting={isGoalSetting}\n                    onSetStart={onSetStart}\n                    onSetGoal={onSetGoal}\n                />\n                <div className=\"buttons\">\n                    maps\n                    <button onClick={() => setBlockersBasedOnGeneratedMap('wall')}>wall</button>\n                    <button onClick={() => setBlockersBasedOnGeneratedMap('mrmap')}>MR map</button>\n                    <button onClick={() => setBlockersBasedOnGeneratedMap('something')}>labyrinth</button>\n                </div>\n            </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { useState } from 'react';\nimport { START, GOAL } from '../constants';\n\nexport const useGoalAndStart = () => {\n    const [start, setStart] = useState(START);\n    const [isStartSetting, setIsStartSetting] = useState(false);\n    const [goal, setGoal] = useState(GOAL);\n    const [isGoalSetting, setIsGoalSetting] = useState(false);\n\n    return {\n        start,\n        setStart,\n        goal,\n        setGoal,\n        isStartSetting,\n        isGoalSetting,\n        setIsStartSetting,\n        setIsGoalSetting\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}