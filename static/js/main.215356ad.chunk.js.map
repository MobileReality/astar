{"version":3,"sources":["components/Tile.js","components/Row.js","components/Map.js","constants/maps.js","hooks/useBlockers.js","constants/index.js","utils/calculateDistance.js","utils/evaluateCalculations.js","hooks/useUser.js","hooks/useRoad.js","App.js","reportWebVitals.js","index.js"],"names":["MemoTile","item","isBlocker","isOpen","isRoad","isGoal","isPath","isUserPosition","setTileAsBlocker","isSetting","classes","isVisitedClass","isRoadClass","isGoalClass","isUserPositionClass","isPathClass","isTentativeClass","IS_TENTATIVE_BETTER","memoIsRoadClass","useMemo","memoIsGoalClass","memoIsVisitedClass","onClick","console","log","onMouseMove","x","y","className","Tile","React","memo","MemoRow","columns","blockers","open","road","goal","path","userPosition","columnsToRender","Array","fill","length","find","visitedTile","roadTile","pathTile","map","index","blocker","Row","Map","rows","rowsToRender","getRowValue","tiles","filter","tile","_","reverse","oneMap","useBlockers","dimension","useState","setBlockers","setBlockersOnMap","calculate","coordinate","Math","round","random","calculateBlockers","prevState","concat","setBlockersBasedOnGeneratedMap","blockersInMap","forEach","row","yIndex","xIndex","push","START","GOAL","gCost","tilePosition","playerPosition","width","height","sqrt","hCost","addCosts","player","undefined","g_cost","h_cost","cost","itemToReturn","parent","getMinCostTiles","data","allCosts","min","minArray","getMinHCostTile","hMinCosts","hMin","getMinCostTile","letCalculateLowerPosition","letCalculateHigherPosition","DIMENSION","evaluateTilesFromOpen","array","openTile","status","removeBlockerTilesFromOpen","blockerTile","removeCurrentPositionFromOpen","currentPosition","checkIfCanReturn","removeUndefined","doCalculations","check","openItem","checkIfAlreadyAddedToOpen","leftTile","rightTile","topTile","bottomTile","topLeftTile","topRightTile","bottomLeftTile","bottomRightTile","neighbours","usePlayer","startingPoint","setPosition","useEffect","document","addEventListener","event","code","prevValue","move","position","useRoad","count","withSkipping","withNeighbourEvaluation","setRoad","setPath","uniques","setCurrentNeighbours","setOpen","isGoalReached","newUniques","newNeighbours","parseData","uniquesWithoutRoadTiles","withoutBlocker","withoutCurrentPlace","nextTile","openWithoutEvaluation","neighboursCosts","findLowestCostTile","evaluateRestTiles","setFinalPath","start","tempPath","getParent","resolvePath","App","setCount","setWithSkipping","setWithNeighbourEvaluation","setIsSetting","positionRef","useRef","current","onMouseDown","onMouseUp","handler","setInterval","clearInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"qSAGaA,EAAW,SAAC,GAAsG,IAApGC,EAAmG,EAAnGA,KAAMC,EAA6F,EAA7FA,UAAWC,EAAkF,EAAlFA,OAAQC,EAA0E,EAA1EA,OAAQC,EAAkE,EAAlEA,OAAQC,EAA0D,EAA1DA,OAAQC,EAAkD,EAAlDA,eAAgBC,EAAkC,EAAlCA,iBAAkBC,EAAgB,EAAhBA,UACpGC,EAAUR,EAAY,aAAe,OACrCS,EAAiBR,EAAS,UAAY,GACtCS,EAAcR,EAAS,UAAY,GACnCS,EAAcR,EAAS,UAAY,GACnCS,EAAsBP,EAAiB,UAAY,GACnDQ,EAAcT,EAAS,UAAY,GACnCU,EAAmBb,GAAUA,EAAOc,oBAAsB,eAAiB,GAC3EC,EAAkBC,mBAAQ,kBAAMP,IAAa,CAACA,IAC9CQ,EAAkBD,mBAAQ,kBAAMN,IAAa,CAACA,IAC9CQ,EAAqBF,mBAAQ,kBAAMR,IAAgB,CAACA,IAC1D,OAAO,qBACHW,QAAS,kBAAMC,QAAQC,IAAIrB,EAAQC,IACnCqB,YAAa,WACNhB,GACCD,EAAiB,CAAEkB,EAAGzB,EAAKyB,EAAGC,EAAG1B,EAAK0B,KAG9CC,UAAS,eAAUlB,EAAV,YAAqBW,EAArB,YAA2CH,EAA3C,YAA8DE,EAA9D,YAAiFN,EAAjF,YAAwGC,EAAxG,YAAuHC,MAI3Ha,EAAOC,IAAMC,KAAK/B,GCrBzBgC,G,MAAU,SAAC,GAAiG,IAA/FN,EAA8F,EAA9FA,EAAGO,EAA2F,EAA3FA,QAASC,EAAkF,EAAlFA,SAAUC,EAAwE,EAAxEA,KAAMC,EAAkE,EAAlEA,KAAMC,EAA4D,EAA5DA,KAAMC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,aAAc/B,EAAkC,EAAlCA,iBAAkBC,EAAgB,EAAhBA,UACvF+B,EAAkB,IAAIC,MAAMR,GAASS,KAAKhB,GAE1CvB,EAAS,SAACwB,GACZ,OAAOQ,EAAKQ,OAAS,GAAKR,EAAKS,MAAK,SAACC,GAAD,OAAiBA,EAAYlB,IAAMA,MAKrEvB,EAAS,SAACuB,GACZ,OAAOS,EAAKO,OAAS,GAAKP,EAAKQ,MAAK,SAACE,GAAD,OAAcA,EAASnB,IAAMA,MAE/DtB,EAAS,SAACsB,GACZ,OAAOU,GAAQA,EAAKV,IAAMA,GAGxBrB,EAAS,SAACqB,GACZ,OAAOW,EAAKK,OAAS,GAAKL,EAAKM,MAAK,SAACG,GAAD,OAAcA,EAASpB,IAAMA,MAG/DpB,EAAiB,SAACmB,EAAGC,GACvB,OAAOY,EAAab,IAAMA,GAAKa,EAAaZ,IAAMA,GAGtD,OACI,qBAAKC,UAAU,MAAf,SACKY,EACIQ,KAAI,SAAC/C,EAAMgD,GAAP,oBAAoBvB,EAAGzB,EAAM0B,EAAGsB,GAAUhD,MAC9C+C,KAAI,SAAC/C,EAAMgD,GACZ,OAAO,cAAC,EAAD,CAEHhD,KAAMA,EACNC,WA1BGyB,EA0BkB1B,EAAK0B,EAzB/BO,EAASS,OAAS,GAAKT,EAASU,MAAK,SAACM,GAAD,OAAaA,EAAQvB,IAAMA,MA0B3DxB,OAAQA,EAAOF,EAAK0B,GACpBvB,OAAQA,EAAOH,EAAK0B,GACpBtB,OAAQA,EAAOJ,EAAK0B,GACpBrB,OAAQA,EAAOL,EAAK0B,GACpBpB,eAAgBA,EAAeN,EAAKyB,EAAGzB,EAAK0B,GAC5CnB,iBAAkBA,EAClBC,UAAWA,GAVR,UACKR,EAAKyB,EADV,YACezB,EAAK0B,IAxBrB,IAACA,SAwCVwB,EAAMrB,IAAMC,KAAKC,GC9CjBoB,G,MAAM,SAAC,GAAoG,IAAlGnB,EAAiG,EAAjGA,QAASoB,EAAwF,EAAxFA,KAAMnB,EAAkF,EAAlFA,SAAUC,EAAwE,EAAxEA,KAAMC,EAAkE,EAAlEA,KAAMC,EAA4D,EAA5DA,KAAMC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,aAAc/B,EAAkC,EAAlCA,iBAAkBC,EAAgB,EAAhBA,UAC7F6C,EAAe,IAAIb,MAAMY,GAAMX,KAAK,GAEpCa,EAAc,SAACC,EAAOP,GACxB,OAAOO,EAAMC,QAAO,SAACC,GAAD,OAAUA,EAAKhC,IAAMuB,MAK7C,OACI,qBAAKrB,UAAU,MAAf,SACK0B,EAAaN,KACV,SAACW,EAAGV,GACA,OACK,cAAC,EAAD,CAEIvB,EAAGuB,EACHhB,QAASA,EACTC,SAAUqB,EAAYrB,EAAUe,GAChCd,KAAMoB,EAAYpB,EAAMc,GACxBb,KAAMmB,EAAYnB,EAAMa,GACxBX,KAAMiB,EAAYjB,EAAMW,GACxBZ,KAAMA,EAAKX,IAAMuB,GAASZ,EAC1BE,aAAcA,EACd/B,iBAAkBA,EAClBC,UAAWA,GAVNwC,MAchBW,cCjCLC,EAAS,CAClhBpEC,EAAc,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACVC,mBAAS,IADC,mBACnC9B,EADmC,KACzB+B,EADyB,KAqC1C,MAAO,CACHC,iBATqB,WACrBD,EA3BsB,WACtB,IAAME,EAAY,WACd,IAAMC,EAAaC,KAAKC,MAAMD,KAAKE,SAAWR,GAC9C,OAAmB,IAAfK,EACOA,EAAa,EACjBA,GAEX,OAAO,IAAI3B,MAAkB,EAAZsB,GAAerB,KAAK,GAAGM,KAAI,iBAAO,CAC/CtB,EAAGyC,IACHxC,EAAGwC,QAEFV,QAAO,gBAAG/B,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAN,OAAqB,IAAND,GAAiB,IAANC,KACjC8B,QAAO,gBAAG/B,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAN,OAAeD,IAAMqC,EAAY,GAAKpC,IAAMoC,EAAY,KAexDS,KASZtC,WACA1B,iBAPqB,SAACkD,GACtBO,GAAY,SAACQ,GAAD,OAAeA,EAAUC,OAAOhB,OAO5CiB,+BAvBmC,WACnC,IAAMC,EAAgB,GACtBf,EAAOD,UAAUiB,SAAQ,SAACC,EAAKC,GAC3BD,EAAID,SAAQ,SAACnB,EAAMsB,GACH,MAATtB,GACHkB,EAAcK,KAAK,CAAEvD,EAAGqD,EAAQpD,EAAGqD,UAG3Cf,EAAYW,M,OC9BPM,EAAQ,CAAExD,EAAG,EAAGC,EAAG,GACnBwD,EAAO,CAAEzD,EAAG,GAAIC,EAAG,ICC1ByD,EAAQ,SAACC,EAAcC,GACzB,IAAMC,EAAQF,EAAa3D,EAAI4D,EAAe5D,EACxC8D,EAASH,EAAa1D,EAAI2D,EAAe3D,EAC/C,OAAO0C,KAAKoB,KAAKF,EAAMA,EAAQC,EAAOA,IAGpCE,EAAQ,SAACL,GACX,IAAME,EAAQJ,EAAKzD,EAAI2D,EAAa3D,EAC9B8D,EAASL,EAAKxD,EAAI0D,EAAa1D,EACrC,OAAO0C,KAAKoB,KAAKF,EAAMA,EAAQC,EAAOA,IAG7BG,EAAW,SAAC1F,GAA8B,IAAxB2F,EAAuB,4DAAdC,EACpC,GAAI5F,EAAJ,CACA,IAAM6F,EAASV,EAAMnF,EAAM2F,GAAUA,EAAOR,MACtCW,EAASL,EAAMzF,GACf+F,EAAOF,EAASC,EAChBE,EAAe,CACjBvE,EAAGzB,EAAKyB,EACRC,EAAG1B,EAAK0B,EACRyD,MAAOU,EACPJ,MAAOK,EACPC,KAAMA,EACNE,OAAQN,GAEZ,OAAOK,IAEEE,EAAkB,SAACC,GAC5B,IAAMC,EAAWD,EAAKpD,KAAI,SAAC/C,GAAD,OAAUA,EAAK+F,QACnCM,EAAMjC,KAAKiC,IAAL,MAAAjC,KAAI,YAAQgC,IACxB,MAAO,CACHE,SAAUH,EAAK3C,QAAO,SAACxD,GAAD,OAAUA,EAAK+F,OAASM,KAC9CA,QAIKE,EAAkB,SAACJ,GAC5B,IAAMK,EAAYL,EAAKpD,KAAI,SAAC/C,GAAD,OAAUA,EAAKyF,SACpCgB,EAAOrC,KAAKiC,IAAL,MAAAjC,KAAI,YAAQoC,IAEzB,OADmBL,EAAKxD,MAAK,SAAC3C,GAAD,OAAUA,EAAKyF,QAAUgB,MAI7CC,EAAiB,SAACnD,EAAO8C,GAAR,OAAgB9C,EAAMZ,MAAK,SAAC3C,GAAD,OAAUA,EAAK+F,OAASM,MC1CpEM,EAA4B,SAACxC,GACtC,OAAGA,GAAc,GACL,EAELA,EAAa,GAGXyC,EAA6B,SAACzC,GACvC,OAAGA,GAAc0C,IACL,EAEL1C,EAAa,GAGX2C,EAAwB,SAAC5E,EAAMC,GACxC,IAAI4E,EAAQ7E,EAMZ,OALAC,EAAKyC,SAAQ,SAAC/B,GACVkE,EAAQA,EAAMvD,QAAO,SAACwD,GAClB,OAAOA,EAASvF,IAAMoB,EAASpB,GAAKuF,EAAStF,IAAMmB,EAASnB,QAG7DqF,EAAMhE,KAAI,SAAC/C,GAAD,mBAAC,eAAcA,GAAf,IAAqBiH,OAAQ,gBAGrCC,EAA6B,SAAChF,EAAMD,GAC7C,IAAI8E,EAAQ7E,EAMZ,OALAD,EAAS2C,SAAQ,SAACuC,GACdJ,EAAQA,EAAMvD,QAAO,SAACwD,GAClB,OAAOA,EAASvF,IAAM0F,EAAY1F,GAAKuF,EAAStF,IAAMyF,EAAYzF,QAGnEqF,GAGEK,EAAgC,SAAClF,EAAMmF,GAChD,OAAOnF,EAAKsB,QAAO,SAACwD,GAAD,OAAcA,EAASvF,IAAM4F,EAAgB5F,GAAKuF,EAAStF,IAAM2F,EAAgB3F,MAIlG4F,EAAmB,SAACtH,GACtB,IAAe,IAAZA,EAAKyB,IAAwB,IAAZzB,EAAK0B,EAGzB,OAAO1B,GAuBEuH,EAAkB,SAACR,GAC5B,OAAOA,EAAMvD,QAAO,SAACxD,GAAD,OAAUA,MAKrBwH,EAAiB,SAAC7B,EAAQzD,GACnC,IAAMuF,EAAQ,SAAChE,GAAD,OA3BgB,SAACzD,EAAMkC,GACrC,GAAIlC,IACDkC,EAAKS,MAAK,SAAC+E,GAAD,OAAcA,EAASjG,IAAMzB,EAAKyB,GAAKiG,EAAShG,IAAM1B,EAAK0B,KAGxE,OAAO1B,EAsBiB2H,CAA0BlE,EAAMvB,IAClD0F,EAAWlC,EACb4B,EAAiB,CAAE7F,EAAGkF,EAA0BhB,EAAOlE,GAAIC,EAAGiE,EAAOjE,IACrEiE,GAEEkC,EAAYnC,EACd4B,EAAiB,CAAE7F,EAAGmF,EAA2BjB,EAAOlE,GAAIC,EAAGiE,EAAOjE,IACtEiE,GAEEmC,EAAUpC,EACZ4B,EAAiB,CAAE7F,EAAGkE,EAAOlE,EAAGC,EAAGkF,EAA2BjB,EAAOjE,KACrEiE,GAEEoC,EAAarC,EACf4B,EAAiB,CAAE7F,EAAGkE,EAAOlE,EAAGC,EAAGiF,EAA0BhB,EAAOjE,KACpEiE,GAEEqC,EAActC,EAChB4B,EAAiB,CAAE7F,EAAGkF,EAA0BhB,EAAOlE,GAAIC,EAAGkF,EAA2BjB,EAAOjE,KAChGiE,GAEEsC,EAAevC,EACjB4B,EAAiB,CAAE7F,EAAGmF,EAA2BjB,EAAOlE,GAAIC,EAAGkF,EAA2BjB,EAAOjE,KACjGiE,GAEEuC,EAAiBxC,EACnB4B,EAAiB,CAAE7F,EAAGkF,EAA0BhB,EAAOlE,GAAIC,EAAGiF,EAA0BhB,EAAOjE,KAC/FiE,GAEEwC,EAAkBzC,EACpB4B,EAAiB,CAAE7F,EAAGmF,EAA2BjB,EAAOlE,GAAIC,EAAGiF,EAA0BhB,EAAOjE,KAChGiE,GAEJ,MAAO,CACHiC,SAAUA,GAAYH,EAAMG,GAC5BC,UAAWA,GAAaJ,EAAMI,GAC9BC,QAASA,GAAWL,EAAMK,GAC1BC,WAAYA,GAAcN,EAAMM,GAChCC,YAAaA,GAAeP,EAAMO,GAClCC,aAAcA,GAAgBR,EAAMQ,GACpCC,eAAgBA,GAAkBT,EAAMS,GACxCC,gBAAiBA,GAAmBV,EAAMU,GAC1CC,WAAY,CACRR,WACAC,YACAC,UACAC,aACAC,cACAC,eACAC,iBACAC,qBC3HCE,EAAY,SAACC,GAAmB,IAAD,EACVvE,mBAAS,2BAChCuE,GAD+B,IAElCnD,MAAO,EACPc,OAAQ,QAJ4B,mBACjCN,EADiC,KACzB4C,EADyB,KAiExC,OAJAC,qBAAU,WArDNC,SAASC,iBAAiB,SAAS,SAASC,GAKxC,OAAQA,EAAMC,MACV,IALO,UAMHL,GAAY,SAACM,GACT,OAAO,2BACAA,GADP,IAEIpH,EAAGmF,EAA2BiC,QAGtC,MAEJ,IAbS,YAcLN,GAAY,SAACM,GACT,OAAO,2BACAA,GADP,IAEIpH,EAAGkF,EAA0BkC,QAGrC,MAEJ,IArBS,YAsBLN,GAAY,SAACM,GACT,OAAO,2BACAA,GADP,IAEInH,EAAGiF,EAA0BkC,QAGrC,MAEJ,IA7BU,aA8BNN,GAAY,SAACM,GACT,OAAO,2BACAA,GADP,IAEInH,EAAGkF,EAA2BiC,cAkBnD,IAEI,CACHlD,SACA4C,cACAO,KAXS,SAACC,GACVR,EAAYQ,MChDPC,EAAU,SAACrD,EAAQ1D,EAAUgH,EAAOH,EAAMI,EAAcC,GAA6B,IAAD,EACrEpF,mBAAS,CAAC4B,IAD2D,mBACtFxD,EADsF,KAChFiH,EADgF,OAErErF,mBAAS,IAF4D,mBAEtF1B,EAFsF,KAEhFgH,EAFgF,OAazF7B,EAAe7B,EAAQ,IARvBiC,EALyF,EAKzFA,SACAC,EANyF,EAMzFA,UACAC,EAPyF,EAOzFA,QACAC,EARyF,EAQzFA,WACAC,EATyF,EASzFA,YACAC,EAVyF,EAUzFA,aACAC,EAXyF,EAWzFA,eACAC,EAZyF,EAYzFA,gBAEEmB,EAAU/B,EAAgB,CAC5BK,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IAtByF,EAyBlDpE,mBAAS+C,EAAsBwC,EAASnH,IAzBU,mBAyBtFiG,EAzBsF,KAyB1EmB,EAzB0E,OA0BrExF,mBAAS+C,EAAsBwC,EAASnH,IA1B6B,mBA0BtFD,EA1BsF,KA0BhFsH,EA1BgF,KA2BvFC,EAAgB,SAACV,GAAD,OAAcA,GAAYA,EAAStH,IAAMyD,EAAKzD,GAAKsH,EAASrH,IAAMwD,EAAKxD,GAI7F8G,qBAAU,WAAO,IAAD,EAWRhB,EAAe7B,EAAQzD,GATvB0F,EAFQ,EAERA,SACAC,EAHQ,EAGRA,UACAC,EAJQ,EAIRA,QACAC,EALQ,EAKRA,WACAC,EANQ,EAMRA,YACAC,EAPQ,EAORA,aACAC,EARQ,EAQRA,eACAC,EATQ,EASRA,gBACAC,EAVQ,EAURA,WAEEsB,EAAanC,EAAgB,CAC/BK,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IAEEwB,EAAgBpC,EAAgB,CAClCa,EAAWR,SACXQ,EAAWP,UACXO,EAAWL,WACXK,EAAWN,QACXM,EAAWJ,YACXI,EAAWH,aACXG,EAAWF,eACXE,EAAWD,kBAETyB,EAAY,SAACN,GAA6B,IAApB9E,EAAmB,uDAAP,GAC9BqF,EAA0B/C,EAAsBwC,EAASnH,EAAKsC,OAAOkB,IACrEmE,EAAiB5C,EAA2B2C,EAAyB5H,GACrE8H,EAAsB3C,EAA8B5C,EAAUC,OAAOqF,GAAiBnE,GAC5F,OAAOoE,GAEXR,EAAqBK,EAAUD,IAC/BH,GAAQ,SAAChF,GAAD,OAAeoF,EAAUF,EAAYlF,QAC9C,CAACmB,EAAOlE,EAAGkE,EAAOjE,IA8BrB8G,qBAAU,WACN,GAAGS,EAAQ,IAAMQ,EAActH,EAAKA,EAAKO,OAAS,IAAK,CACnD,IAAMsH,EA5Ba,WAEvB,IAAIC,EAAwB/H,EAAKsB,QAAO,SAACxD,GAAD,MAA0B,YAAhBA,EAAKiH,UACnB,IAAjCgD,EAAsBvH,SACrBuH,EAAwB/H,EAAKsB,QAAO,SAACxD,GAAD,MAA0B,YAAhBA,EAAKiH,WAJ1B,MAMHf,EAAgB+D,GAAlC3D,EANqB,EAMrBA,SAAUD,EANW,EAMXA,IAElB,GAAG8C,EAAyB,CACxB,IAAMe,EAAkBhE,EAAgBkC,GAExC,GAAG8B,EAAgB7D,IAAMA,EACrB,OAAG6D,EAAgB5D,SAAS5D,OAAS,EAC1B6D,EAAgB2D,EAAgB5D,UAEpCI,EAAe0B,EAAY8B,EAAgB7D,KAI1D,OAAGC,EAAS5D,OAAS,EACV6D,EAAgBD,GAEpBI,EAAeuD,EAAuB5D,GAMxB8D,GACjBrB,EAAKkB,GACFd,GACCM,GAAQ,SAAChF,GAAD,OF9DS,SAACtC,GAC9B,OAAOA,EAAKa,KAAI,SAAC/C,GACb,MAAmB,YAAhBA,EAAKiH,OACG,2BACAjH,GADP,IAEIiH,OAAQ,YAGTjH,KEsDwBoK,CAAkB5F,MAE7C4E,GAAQ,SAAC5E,GAAD,OAAeA,EAAUC,OAAOuF,SAE7C,CAACf,IAmBJ,MAAO,CACH/G,OACAC,OACAE,OACAgI,aARiB,YAXD,SAACC,GACjB,IAAIC,EAAW,IACG,SAAZC,EAAa/G,GACK,OAAhBA,EAAKwC,SACTsE,EAASvF,KAAKvB,EAAKwC,QACnBuE,EAAU/G,EAAKwC,SAEnBuE,CAAUF,GACVjB,EAAQkB,GAIRE,CAAYtI,EAAKA,EAAKO,OAAS,KAQ/B+G,kBChDOiB,MA3Ff,WAAgB,IAAD,EACe3G,mBAAS,GADxB,mBACJkF,EADI,KACG0B,EADH,OAG+B5G,oBAAS,GAHxC,mBAGHmF,EAHG,KAGW0B,EAHX,OAIqD7G,oBAAS,GAJ9D,mBAIHoF,EAJG,KAIsB0B,EAJtB,OAMcxC,EAAUpD,GAA3BU,EANG,EAMHA,OAAQmD,EANL,EAMKA,KANL,EAYPjF,EAAY,CAAEC,ULlBG,KKcjB7B,EARO,EAQPA,SACAgC,EATO,EASPA,iBACA1D,EAVO,EAUPA,iBACAmE,EAXO,EAWPA,+BAXO,EAmBPsE,EACArD,EACA1D,EACAgH,EACAH,EACAI,EACAC,GAXAjH,EAdO,EAcPA,KACAC,EAfO,EAePA,KACAE,EAhBO,EAgBPA,KACAgI,EAjBO,EAiBPA,aACAZ,EAlBO,EAkBPA,cAlBO,EA2BuB1F,oBAAS,GA3BhC,mBA2BJvD,EA3BI,KA2BOsK,EA3BP,KA4BLC,EAAcC,iBAAOrF,GAwB3B,OApBA6C,qBAAU,WACNuC,EAAYE,QAAUtF,EACtB0E,MACD,CAACpB,IAkBJ,qBAAKtH,UAAU,MACVuJ,YAAa,kBAAMJ,GAAa,IAAOK,UAAW,kBAAML,GAAa,IAD1E,SAGE,yBAAQnJ,UAAU,aAAlB,UACI,sBAAKA,UAAU,UAAf,UACI,wBAAQN,QAlBO,WACrB,IAAM+J,EAAUC,aAAY,WACpB5B,EAAcsB,EAAYE,SAC1BK,cAAcF,GALET,GAAS,SAACnG,GAAD,OAAeA,EAAY,OASzD,IAWG,kBACA,wBAAQnD,QAAS4C,EAAjB,0BACA,wBAAQ5C,QAASqD,EAAjB,uCACA,wBACI/C,UAAWuH,EAAe,iBAAmB,GAC7C7H,QAAS,kBAAMuJ,GAAgB,SAACpG,GAAD,OAAgBA,MAFnD,2BAMA,wBACI7C,UAAWwH,EAA0B,iBAAmB,GACxD9H,QAAS,kBAAMwJ,GAA2B,SAACrG,GAAD,OAAgBA,MAF9D,2CAOJ,cAAC,EAAD,CACIxC,QLjFW,GKkFXoB,KLlFW,GKmFXnB,SAAUA,EACVC,KAAMA,EACNC,KAAMA,EACNE,KAAMA,EACND,KAAM8C,EACN5C,aAAcqD,EACdpF,iBAAkBA,EAClBC,UAAWA,UChFV+K,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzD,SAAS0D,eAAe,SAM1BZ,M","file":"static/js/main.215356ad.chunk.js","sourcesContent":["import React, { useMemo } from 'react'\nimport './Tile.css'\n\nexport const MemoTile = ({ item, isBlocker, isOpen, isRoad, isGoal, isPath, isUserPosition, setTileAsBlocker, isSetting }) => {\n    const classes = isBlocker ? 'block_tile' : 'tile';\n    const isVisitedClass = isOpen ? 'is_open' : '';\n    const isRoadClass = isRoad ? 'is_road' : '';\n    const isGoalClass = isGoal ? 'is_goal' : '';\n    const isUserPositionClass = isUserPosition ? 'is_user' : '';\n    const isPathClass = isPath ? 'is_path' : '';\n    const isTentativeClass = isOpen && isOpen.IS_TENTATIVE_BETTER ? 'is_tentative' : ''\n    const memoIsRoadClass = useMemo(() => isRoadClass, [isRoadClass]);\n    const memoIsGoalClass = useMemo(() => isGoalClass, [isGoalClass]);\n    const memoIsVisitedClass = useMemo(() => isVisitedClass, [isVisitedClass]);\n    return <div\n        onClick={() => console.log(isOpen, isRoad)}\n        onMouseMove={() => {\n            if(isSetting) {\n                setTileAsBlocker({ x: item.x, y: item.y })\n            }\n        }}\n        className={`size ${classes} ${memoIsVisitedClass} ${memoIsRoadClass} ${memoIsGoalClass} ${isUserPositionClass} ${isPathClass} ${isTentativeClass}`}\n    />\n};\n\nexport const Tile = React.memo(MemoTile);\n\n","import React from 'react';\nimport { Tile } from './Tile';\nimport './Row.css'\n\nconst MemoRow = ({ x, columns, blockers, open, road, goal, path, userPosition, setTileAsBlocker, isSetting }) => {\n    const columnsToRender = new Array(columns).fill(x);\n\n    const isOpen = (y) => {\n        return open.length > 0 && open.find((visitedTile) => visitedTile.y === y);\n    }\n    const isBlocker = (y) => {\n        return blockers.length > 0 && blockers.find((blocker) => blocker.y === y);\n    }\n    const isRoad = (y) => {\n        return road.length > 0 && road.find((roadTile) => roadTile.y === y);\n    }\n    const isGoal = (y) => {\n        return goal && goal.y === y;\n    }\n\n    const isPath = (y) => {\n        return path.length > 0 && path.find((pathTile) => pathTile.y === y);\n    }\n\n    const isUserPosition = (x, y) => {\n        return userPosition.x === x && userPosition.y === y;\n    }\n\n    return(\n        <div className=\"row\">\n            {columnsToRender\n                .map((item, index) => ({ x: item, y: index, ...item }))\n                .map((item, index) => {\n                return <Tile\n                    key={`${item.x}_${item.y}`}\n                    item={item}\n                    isBlocker={isBlocker(item.y)}\n                    isOpen={isOpen(item.y)}\n                    isRoad={isRoad(item.y)}\n                    isGoal={isGoal(item.y)}\n                    isPath={isPath(item.y)}\n                    isUserPosition={isUserPosition(item.x, item.y)}\n                    setTileAsBlocker={setTileAsBlocker}\n                    isSetting={isSetting}\n                />\n            })}\n        </div>\n    )\n}\n\nexport const Row = React.memo(MemoRow);\n","import React from 'react';\nimport {Row} from \"./Row\";\nimport './Map.css';\n\nexport const Map = ({ columns, rows, blockers, open, road, goal, path, userPosition, setTileAsBlocker, isSetting }) => {\n    const rowsToRender = new Array(rows).fill(0);\n\n    const getRowValue = (tiles, index) => {\n        return tiles.filter((tile) => tile.x === index)\n    }\n\n\n\n    return(\n        <div className=\"map\">\n            {rowsToRender.map(\n                (_, index) => {\n                    return(\n                         <Row\n                             key={index}\n                             x={index}\n                             columns={columns}\n                             blockers={getRowValue(blockers, index)}\n                             open={getRowValue(open, index)}\n                             road={getRowValue(road, index)}\n                             path={getRowValue(path, index)}\n                             goal={goal.x === index && goal}\n                             userPosition={userPosition}\n                             setTileAsBlocker={setTileAsBlocker}\n                             isSetting={isSetting}\n                         />\n                    )\n                }\n                ).reverse()\n            }\n        </div>\n    )\n}\n","export const oneMap = [\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],\n    ['-','-','-','-','-','-','#','#','#','#','#','#','#','#','#','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','#','-','-','-','-'],\n    ['-','-','-','-','-','-','#','#','#','#','#','#','#','#','#','#','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],\n    ['-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'],\n];\n","import { useState } from 'react'\nimport { oneMap } from '../constants/maps';\nimport '../components/Tile.css'\n\nexport const useBlockers = ({ dimension }) => {\n    const [blockers, setBlockers] = useState([]);\n\n    const calculateBlockers = () => {\n        const calculate = () => {\n            const coordinate = Math.round(Math.random() * dimension)\n            if (coordinate !== 0)\n                return coordinate - 1;\n            return coordinate\n        }\n        return new Array(dimension * 8).fill(0).map(() => ({\n            x: calculate(),\n            y: calculate(),\n        }))\n            .filter(({ x, y }) => (x !== 0 && y !== 0))\n            .filter(({ x, y }) => (x !== dimension - 1 && y !== dimension - 1))\n    }\n\n    const setBlockersBasedOnGeneratedMap = () => {\n        const blockersInMap = [];\n        oneMap.reverse().forEach((row, yIndex) => {\n            row.forEach((tile, xIndex) => {\n                if(tile === '-') return;\n                blockersInMap.push({ x: yIndex, y: xIndex })\n            })\n        })\n        setBlockers(blockersInMap)\n    }\n\n    const setBlockersOnMap = () => {\n        setBlockers(calculateBlockers());\n    }\n\n    const setTileAsBlocker = (tile) => {\n        setBlockers((prevState) => prevState.concat(tile));\n    }\n\n    return {\n        setBlockersOnMap,\n        blockers,\n        setTileAsBlocker,\n        setBlockersBasedOnGeneratedMap\n    }\n}\n","export const START = { x: 4, y: 0 };\nexport const GOAL = { x: 18, y: 19 };\nexport const DIMENSION = 20;\n","import { GOAL } from '../constants';\n\nconst gCost = (tilePosition, playerPosition) => { // gCost from start\n    const width = tilePosition.x - playerPosition.x;\n    const height = tilePosition.y - playerPosition.y;\n    return Math.sqrt(width*width + height*height);\n}\n\nconst hCost = (tilePosition) => { // hCost from end\n    const width = GOAL.x - tilePosition.x;\n    const height = GOAL.y - tilePosition.y;\n    return Math.sqrt(width*width + height*height);\n}\n\nexport const addCosts = (item, player = undefined) => {\n    if(!item) return undefined;\n    const g_cost = gCost(item, player) + player.gCost;\n    const h_cost = hCost(item);\n    const cost = g_cost + h_cost;\n    const itemToReturn = {\n        x: item.x,\n        y: item.y,\n        gCost: g_cost,\n        hCost: h_cost,\n        cost: cost,\n        parent: player,\n    }\n    return itemToReturn\n}\nexport const getMinCostTiles = (data) => {\n    const allCosts = data.map((item) => item.cost);\n    const min = Math.min(...allCosts);\n    return {\n        minArray: data.filter((item) => item.cost === min),\n        min,\n    };\n}\n\nexport const getMinHCostTile = (data) => {\n    const hMinCosts = data.map((item) => item.hCost);\n    const hMin = Math.min(...hMinCosts);\n    const tileToMove = data.find((item) => item.hCost === hMin);\n    return tileToMove;\n}\n\nexport const getMinCostTile = (tiles, min) => tiles.find((item) => item.cost === min);","import { addCosts } from './calculateDistance';\nimport { DIMENSION } from \"../constants\";\n\nexport const letCalculateLowerPosition = (coordinate) => {\n    if(coordinate <= 0) {\n        return -1\n    }\n    return coordinate - 1;\n}\n\nexport const letCalculateHigherPosition = (coordinate) => {\n    if(coordinate >= DIMENSION - 1) {\n        return -1\n    }\n    return coordinate + 1;\n}\n\nexport const evaluateTilesFromOpen = (open, road) => {\n    let array = open;\n    road.forEach((roadTile) => {\n        array = array.filter((openTile) => {\n            return openTile.x !== roadTile.x || openTile.y !== roadTile.y\n        });\n    })\n    return array.map((item) => ({...item, status: 'waiting'}));\n}\n\nexport const removeBlockerTilesFromOpen = (open, blockers) => {\n    let array = open;\n    blockers.forEach((blockerTile) => {\n        array = array.filter((openTile) => {\n            return openTile.x !== blockerTile.x || openTile.y !== blockerTile.y\n        });\n    })\n    return array;\n}\n\nexport const removeCurrentPositionFromOpen = (open, currentPosition) => {\n    return open.filter((openTile) => openTile.x !== currentPosition.x || openTile.y !== currentPosition.y);\n}\n\n\nconst checkIfCanReturn = (item) => {\n    if(item.x === -1 || item.y === -1) {\n        return undefined;\n    }\n    return item\n}\n\nconst checkIfAlreadyAddedToOpen = (item, open) => {\n    if(!item) return;\n    if(open.find((openItem) => openItem.x === item.x && openItem.y === item.y)) {\n        return undefined;\n    }\n    return item\n}\n\nexport const evaluateRestTiles = (open) => {\n    return open.map((item) => {\n        if(item.status === 'waiting') {\n            return {\n                ...item,\n                status: 'skipped',\n            }\n        }\n        return item\n    })\n}\n\nexport const removeUndefined = (array) => {\n    return array.filter((item) => item);\n}\n\n\n\nexport const doCalculations = (player, open) => {\n    const check = (tile) => checkIfAlreadyAddedToOpen(tile, open)\n    const leftTile = addCosts(\n        checkIfCanReturn({ x: letCalculateLowerPosition(player.x), y: player.y }),\n        player\n    )\n    const rightTile = addCosts(\n        checkIfCanReturn({ x: letCalculateHigherPosition(player.x), y: player.y }),\n        player\n    );\n    const topTile = addCosts(\n        checkIfCanReturn({ x: player.x, y: letCalculateHigherPosition(player.y) }),\n        player\n    );\n    const bottomTile = addCosts(\n        checkIfCanReturn({ x: player.x, y: letCalculateLowerPosition(player.y) }),\n        player\n    );\n    const topLeftTile = addCosts(\n        checkIfCanReturn({ x: letCalculateLowerPosition(player.x), y: letCalculateHigherPosition(player.y) }),\n        player\n    );\n    const topRightTile = addCosts(\n        checkIfCanReturn({ x: letCalculateHigherPosition(player.x), y: letCalculateHigherPosition(player.y) }),\n        player\n    );\n    const bottomLeftTile = addCosts(\n        checkIfCanReturn({ x: letCalculateLowerPosition(player.x), y: letCalculateLowerPosition(player.y) }),\n        player\n    );\n    const bottomRightTile = addCosts(\n        checkIfCanReturn({ x: letCalculateHigherPosition(player.x), y: letCalculateLowerPosition(player.y) }),\n        player\n    );\n    return {\n        leftTile: leftTile && check(leftTile),\n        rightTile: rightTile && check(rightTile),\n        topTile: topTile && check(topTile),\n        bottomTile: bottomTile && check(bottomTile),\n        topLeftTile: topLeftTile && check(topLeftTile),\n        topRightTile: topRightTile && check(topRightTile),\n        bottomLeftTile: bottomLeftTile && check(bottomLeftTile),\n        bottomRightTile: bottomRightTile && check(bottomRightTile),\n        neighbours: {\n            leftTile,\n            rightTile,\n            topTile,\n            bottomTile,\n            topLeftTile,\n            topRightTile,\n            bottomLeftTile,\n            bottomRightTile,\n        }\n    }\n}\n","import { useState, useEffect } from 'react';\nimport { letCalculateLowerPosition, letCalculateHigherPosition } from '../utils/evaluateCalculations';\n\nexport const usePlayer = (startingPoint) => {\n    const [player, setPosition] = useState({\n        ...startingPoint,\n        gCost: 0,\n        parent: null,\n    });\n\n    function setListenToArrows() {\n        document.addEventListener('keyup', function(event) {\n            const up = 'ArrowUp';\n            const down = 'ArrowDown';\n            const left = 'ArrowLeft';\n            const right = 'ArrowRight';\n            switch (event.code) {\n                case up: {\n                    setPosition((prevValue) => {\n                        return {\n                            ...prevValue,\n                            x: letCalculateHigherPosition(prevValue),\n                        }\n                    });\n                    break;\n                }\n                case down: {\n                    setPosition((prevValue) => {\n                        return {\n                            ...prevValue,\n                            x: letCalculateLowerPosition(prevValue),\n                        }\n                    });\n                    break;\n                }\n                case left: {\n                    setPosition((prevValue) => {\n                        return {\n                            ...prevValue,\n                            y: letCalculateLowerPosition(prevValue),\n                        }\n                    });\n                    break;\n                }\n                case right: {\n                    setPosition((prevValue) => {\n                        return {\n                            ...prevValue,\n                            y: letCalculateHigherPosition(prevValue)\n                        }\n                    });\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        })\n    }\n\n    const move = (position) => {\n        setPosition(position);\n    }\n\n    useEffect(() => {\n        setListenToArrows();\n    }, [])\n\n    return {\n        player,\n        setPosition,\n        move,\n    }\n}\n","import { useState, useEffect } from 'react';\nimport {\n    doCalculations,\n    evaluateRestTiles,\n    removeUndefined,\n    evaluateTilesFromOpen,\n    removeCurrentPositionFromOpen,\n    removeBlockerTilesFromOpen,\n} from '../utils/evaluateCalculations';\nimport { getMinCostTiles, getMinHCostTile, getMinCostTile } from '../utils/calculateDistance';\nimport { GOAL } from '../constants';\n\n\nexport const useRoad = (player, blockers, count, move, withSkipping, withNeighbourEvaluation) => {\n    const [road, setRoad] = useState([player]);\n    const [path, setPath] = useState([]);\n    // initial tiles\n    const {\n        leftTile,\n        rightTile,\n        topTile,\n        bottomTile,\n        topLeftTile,\n        topRightTile,\n        bottomLeftTile,\n        bottomRightTile,\n    } = doCalculations(player, [])\n    const uniques = removeUndefined([\n        leftTile,\n        rightTile,\n        topTile,\n        bottomTile,\n        topLeftTile,\n        topRightTile,\n        bottomLeftTile,\n        bottomRightTile,\n    ]);\n\n    const [neighbours, setCurrentNeighbours] = useState(evaluateTilesFromOpen(uniques, road));\n    const [open, setOpen] = useState(evaluateTilesFromOpen(uniques, road));\n    const isGoalReached = (position) => position && position.x === GOAL.x && position.y === GOAL.y\n\n    // update area based on new position\n    /* eslint-disable */\n    useEffect(() => {\n        const {\n            leftTile,\n            rightTile,\n            topTile,\n            bottomTile,\n            topLeftTile,\n            topRightTile,\n            bottomLeftTile,\n            bottomRightTile,\n            neighbours,\n        } = doCalculations(player, open)\n        const newUniques = removeUndefined([\n            leftTile,\n            rightTile,\n            topTile,\n            bottomTile,\n            topLeftTile,\n            topRightTile,\n            bottomLeftTile,\n            bottomRightTile,\n        ])\n        const newNeighbours = removeUndefined([\n            neighbours.leftTile,\n            neighbours.rightTile,\n            neighbours.bottomTile,\n            neighbours.topTile,\n            neighbours.topLeftTile,\n            neighbours.topRightTile,\n            neighbours.bottomLeftTile,\n            neighbours.bottomRightTile,\n        ])\n        const parseData = (uniques, prevState = []) => {\n            const uniquesWithoutRoadTiles = evaluateTilesFromOpen(uniques, road.concat(player));\n            const withoutBlocker = removeBlockerTilesFromOpen(uniquesWithoutRoadTiles, blockers);\n            const withoutCurrentPlace = removeCurrentPositionFromOpen(prevState.concat(withoutBlocker), player);\n            return withoutCurrentPlace\n        }\n        setCurrentNeighbours(parseData(newNeighbours));\n        setOpen((prevState) => parseData(newUniques, prevState))\n    }, [player.x, player.y])\n    /* eslint-enable */\n\n\n    const findLowestCostTile = () => {\n        // evaluating all open tiles\n        let openWithoutEvaluation = open.filter((item) => item.status === 'waiting');\n        if(openWithoutEvaluation.length === 0) {\n            openWithoutEvaluation = open.filter((item) => item.status === 'skipped');\n        }\n        const { minArray, min } = getMinCostTiles(openWithoutEvaluation);\n\n        if(withNeighbourEvaluation) { // evaluating only neighbour tiles\n            const neighboursCosts = getMinCostTiles(neighbours);\n\n            if(neighboursCosts.min < min) {\n                if(neighboursCosts.minArray.length > 1) {\n                    return getMinHCostTile(neighboursCosts.minArray);\n                }\n                return getMinCostTile(neighbours, neighboursCosts.min);\n            }\n        }\n\n        if(minArray.length > 1) {\n            return getMinHCostTile(minArray);\n        }\n        return getMinCostTile(openWithoutEvaluation, min);\n    }\n\n    /* eslint-disable */\n    useEffect(() => {\n        if(count > 0 && !isGoalReached(road[road.length - 1])) {\n            const nextTile = findLowestCostTile();\n            move(nextTile)\n            if(withSkipping) {\n                setOpen((prevState) => evaluateRestTiles(prevState))\n            }\n            setRoad((prevState) => prevState.concat(nextTile))\n        }\n    }, [count])\n    /* eslint-enable */\n\n\n    const resolvePath = (start) => {\n        let tempPath = []\n        const getParent = (tile) => {\n            if (tile.parent === null) return;\n            tempPath.push(tile.parent);\n            getParent(tile.parent)\n        }\n        getParent(start);\n        setPath(tempPath);\n    }\n\n    const setFinalPath = () => {\n        resolvePath(road[road.length - 1]);\n    }\n\n    return {\n        open,\n        road,\n        path,\n        setFinalPath,\n        isGoalReached,\n    }\n}\n","import React, {useEffect, useState, useRef} from 'react';\nimport './App.css';\nimport { Map } from './components/Map';\nimport { useBlockers } from './hooks/useBlockers';\nimport { usePlayer } from './hooks/useUser';\nimport { useRoad } from './hooks/useRoad';\nimport { START, GOAL, DIMENSION } from './constants';\n\nfunction App() {\n    const [count, setCount] = useState(0); // frames\n\n    const [ withSkipping, setWithSkipping ] = useState(true);\n    const [ withNeighbourEvaluation, setWithNeighbourEvaluation ] = useState(true);\n\n    const { player, move } = usePlayer(START);\n    const {\n        blockers,\n        setBlockersOnMap,\n        setTileAsBlocker,\n        setBlockersBasedOnGeneratedMap,\n    } = useBlockers({ dimension: DIMENSION });\n    const {\n        open,\n        road,\n        path,\n        setFinalPath,\n        isGoalReached\n    } = useRoad(\n        player,\n        blockers,\n        count,\n        move,\n        withSkipping,\n        withNeighbourEvaluation\n    );\n    const [isSetting, setIsSetting] = useState(false);\n    const positionRef = useRef(player)\n\n    // updating position based on frame (count)\n    /* eslint-disable */\n    useEffect(() => {\n        positionRef.current = player;\n        setFinalPath()\n    }, [count])\n    /* eslint-enable */\n\n    const moveByOneTile = () => setCount((prevState) => prevState + 1);\n\n    const moveToLowestCost = () => {\n        const handler = setInterval(() => {\n            if (isGoalReached(positionRef.current)) {\n                clearInterval(handler);\n                return\n            }\n            moveByOneTile()\n        }, 5);\n    }\n\n\n\n    return (\n    <div className=\"App\"\n         onMouseDown={() => setIsSetting(true)} onMouseUp={() => setIsSetting(false)}\n    >\n      <header className=\"App-header\">\n          <div className=\"buttons\">\n              <button onClick={moveToLowestCost}>move</button>\n              <button onClick={setBlockersOnMap}>set blockers</button>\n              <button onClick={setBlockersBasedOnGeneratedMap}>set blockers based on map</button>\n              <button\n                  className={withSkipping ? 'with-condition' : ''}\n                  onClick={() => setWithSkipping((prevState) => !prevState)}\n              >\n                  with skipping\n              </button>\n              <button\n                  className={withNeighbourEvaluation ? 'with-condition' : ''}\n                  onClick={() => setWithNeighbourEvaluation((prevState) => !prevState)}\n              >\n                  with neighbours evaluation\n              </button>\n          </div>\n          <Map\n              columns={DIMENSION}\n              rows={DIMENSION}\n              blockers={blockers}\n              open={open}\n              road={road}\n              path={path}\n              goal={GOAL}\n              userPosition={player}\n              setTileAsBlocker={setTileAsBlocker}\n              isSetting={isSetting}\n          />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}